# Default values for conjur-oss.

# Conjur whitelisted authenticators. Maps as CONJUR_AUTHENTICATORS env variable.
authenticators: "authn"

# Conjur data key, 32 byte base-64 encoded string for data encryption.
# Generate one with `docker run --rm cyberark/conjur data-key generate`.
dataKey: ""

# PostgreSQL connection string. If left blank, a PostgreSQL deployment is created.
databaseUrl: ""

# Name of Conjur account to be created
account: "default"

ssl:
  expiration: 365 # days
  hostname: "192.168.99.100"
  altNames:
    - conjur.myorg.com

image:
  repository: cyberark/conjur  # https://hub.docker.com/r/cyberark/conjur/
  tag: latest
  pullPolicy: Always

postgres:
  image:
    repository: postgres  # https://hub.docker.com/_/postgres/
    tag: '10.1'
    pullPolicy: IfNotPresent

nginx:
  image:
    repository: nginx
    tag: '1.15'
    pullPolicy: IfNotPresent

deployment:
  annotations: {}

service:
  type: NodePort
  port: 443
  annotations: {}

ingress:
  enabled: true
  annotations:
    ingress.kubernetes.io/ssl-passthrough: "true"
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # kubernetes.io/tls-acme: "true"
  tls:
    letsencrypt:
      enabled: false
      # dns01:
      #   provider: cloud-dns-staging  # from ClusterIssuer.spec.acme.dns01.providers.name
      # issuerRef:
      #   name: letsencrypt-staging  # from ClusterIssuer.metadata.name
      #   kind: ClusterIssuer  # Issuer or ClusterIssuer, from cert-manager

conjurLabels: {}  # Additional labels to apply to all conjur resources
postgresLabels: {}  # Additional labels to apply to all conjur resources

replicaCount: 1  # Number of Conjur pods to run

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
