1. Get the application URLs which should match:
{{- if .Values.ingress.enabled }}
  - https://{{ $.Values.ssl.hostname }}
{{- range .Values.ssl.altNames }}
  - https://{{ . }}
{{- end }}

  This may take up to 10 minutes for GKE ingress when using GCE load balancers.

  Run watch "kubectl describe ingress {{ template "conjur-oss.fullname" . }} | grep backends"
  until status changes from "Unknown" to "HEALTHY" or if you are running minikube, you can
  run "minikube service {{ template "conjur-oss.fullname" . }} --url" though make sure to use
  "https" scheme instead of the "http" that MiniKube will print out. MiniKube may also take a
  few minutes to properly route your requests.
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "conjur-oss.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo https://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ template "conjur-oss.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "conjur-oss.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo https://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "conjur-oss.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl port-forward $POD_NAME 9443:9443
  Visit https://127.0.0.1:9443 to use your application. The internal certificate is self-signed so you will need to manually proceed through the warning prompts.
{{- end }}

2. Configure Conjur
  To create an initial account and login, follow the instructions here:
  https://www.conjur.org/get-started/install-conjur.html#install-and-configure

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "conjur-oss.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl exec $POD_NAME --container={{ .Chart.Name }} conjurctl account create <ACCOUNT>

  Note that the conjurctl account create command gives you the
  public key and admin API key for the account you created.
  Back them up in a safe location.

3. Connect to Conjur
  docker run --rm -it --entrypoint bash cyberark/conjur-cli:5
  # Or if using MiniKube, use the following command:
  # docker run --rm -it --network host --entrypoint bash cyberark/conjur-cli:5

  # Account here is the one you configured in step #2 while the endpoint
  # is the https endpoint for your Conjur service.
  conjur init -u <ENDPOINT> -a <ACCOUNT>

  # API key here is the key that creation of the account provided you in step #2
  conjur authn login -u admin -p <API_KEY>
  conjur authn whoami

4. Next Steps
  - Go through the Conjur Tutorials: https://www.conjur.org/tutorials/
  - View Conjurâ€™s API Documentation: https://www.conjur.org/api.html
